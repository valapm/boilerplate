import "./fixMath.scrypt";

/**
* Implement the logarithmic market scoring rule using fixed point arithmetics.
* Scaling factor if inputs is 1. Scaling factor of output is 2^16.
* Max option count is 10.
*/
library FixLMSR {
  // static const int MaxOptionCount = 10;

  static function lmsr(bytes options, int liquidity) : int {

    const int MaxOptionLength = 10;
    int i = 0;
    int x = 0;
    int optionCount = len(options);
    loop (MaxOptionLength) {
      if (i < optionCount) {
        x = x + FixMath.exp(unpack(options[i : i + 1]) * 65536 / liquidity);
        i++;
      }
    }

    return FixMath.log(x);
  }

  // public function test(int i) {
  //   // bytes options = num2bin(1 * 65536, 3) + num2bin(2 * 65536, 3) + num2bin(3 * 65536, 3);
  //   bytes options = b'010203';
  //   int liquidity = 3;
  //   // int optionCount = 3;
  //   int testLmsr1 = FixLMSR.lmsr(options, liquidity);
  //   require(testLmsr1 / 4 == 29523); // Ensure accuracy up to 2^14
  // }
}