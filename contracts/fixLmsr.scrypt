import "./fixMath.scrypt";

/**
* Implement the logarithmic market scoring rule using fixed point arithmetics.
* Scaling factor is 2^16.
* Max option count is 10.
*/
library FixLMSR {
  // static const int MaxOptionCount = 10;

  static function lmsr(int[10] options, int optionCount, int liquidity) : int {

    const int OptionLength = 10;
    int i = 0;
    int x = 0;
    loop (OptionLength) {
      if (i < optionCount) {
        x = x + FixMath.exp(options[i] * 65536 / liquidity);
        i++;
      }
    }

    return FixMath.log(x);
  }

  // public function test(int i) {
  //   int[10] options = [1 * 65536, 2 * 65536, 3 * 65536, 0, 0, 0, 0, 0, 0, 0];
  //   int liquidity = 3 * 65536;
  //   int optionCount = 3;
  //   int testLmsr1 = FixLMSR.lmsr(options, optionCount, liquidity);
  //   require(true);
  // }
}