/**
* a contract solving quadratic equation
*/

struct Coeff {
    int a;
    int b;
    int c;
}

contract Callee {
    static const int N = 2;

    public function solve(Coeff co, int x, SigHashPreimage txPreimage) {
        // Note: SigHash_SINGLE is used
        require(Tx.checkPreimageSigHashType(txPreimage, SigHash.SINGLE | SigHash.FORKID));

        // check x is a root
        require(co.a * x * x + co.b * x + co.c == 0);

        bytes data = num2bin(co.a, N) + num2bin(co.b, N) + num2bin(co.c, N) + num2bin(x, N);
        bytes outputScript = Utils.buildOpreturnScript(data);
        bytes output = Utils.buildOutput(outputScript, 0);
        require(hash256(output) == SigHash.hashOutputs(txPreimage));
    }
}